name: Python CI/CD

permissions:
  contents: write
  id-token: write

on:
  workflow_call:
    inputs:
      run-deploy:
        description: 'Set to "true" to run the build and deploy jobs if tests pass.'
        required: false
        type: boolean
        default: false

jobs:
  cqa:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v5

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pre-commit
          key: pydeps-${{ hashFiles('.pre-commit-config.yaml', 'pyproject.toml') }}

      - name: Set up the environment
        uses: ./.github/actions/setup-python-env

      - name: Run code quality assessments
        run: make cqa
  
  test:
    name: Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - name: Check out
        uses: actions/checkout@v5

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pydeps-${{ hashFiles('.pre-commit-config.yaml', 'pyproject.toml') }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: ./.github/actions/setup-python-env
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run make test
        run: make test

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        if: ${{ matrix.python-version == '3.13' }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build-and-deploy:
    name: Build & Deploy
    needs: [cqa, test]
    if: ${{ inputs.run-deploy == true }}
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write

    steps:
      - name: Check out
        uses: actions/checkout@v5

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pydeps-${{ hashFiles('.pre-commit-config.yaml', 'pyproject.toml') }}

      - name: Set up Python
        uses: ./.github/actions/setup-python-env

      - name: Build sdist and wheel with uv
        run: |
          uv build

      - name: Publish package to PyPI
        run: uv publish

  deploy-docs:
    needs: build-and-deploy
    if: ${{ inputs.run-deploy == true }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out
        uses: actions/checkout@v5

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pydeps-${{ hashFiles('.pre-commit-config.yaml', 'pyproject.toml') }}

      - name: Set up the environment
        uses: ./.github/actions/setup-python-env

      - name: Deploy documentation
        run: uv run mkdocs gh-deploy --force
